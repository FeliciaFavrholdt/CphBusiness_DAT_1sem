/* autogenerated by Processing revision 1279 on 2022-02-17 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class sketch_miniGame extends PApplet {

// **** FELICIA FAVRHOLDT MINIGAME ****

// INSTRUCTIONS BELOW: 
// This game is about moving blocks around - based on the game Rush Hour Blocks

// defining images
PImage bg; // background image

//defining classes
Player p;

// defining color variables 
int pink = (0xFFE5CCE5); 
int orange = (0xFFE69138);
int yellow = (0xFFFFDF9E);
int green = (0xFFB5E3AF);
int grey = (0xFF798D87);
int brown = (0xFFA3764F);
int blue = (0xFF2A496E);
int red = (0xFF04897C);
int white = (0xFFFFFFFF);
int black = (0xFF000000);

// defining global variables 
int posX = 1000; 
int posY = 800; 
String s;
boolean left, right, up, down;

// settings - setting size variables here 
public void settings() {
	size(posX, posY);
}

// main - all static variables here 
public void setup() {
	fill(white);
	bg = loadImage("bg_1.jpg");
	loadBackground();

	p = new Player(); 
	s = "";

	left = false;
	right = false; 
	up = false; 
	down = false; 
}

// draw - all dynamics here 
public void draw() {

	//call functions 
	p.update();
	p.display();

	fill(255 );
	textSize(30);
	text(s, 400, 400);
}


// --------------------------------- functions ----------------------

// background setup 
public void loadBackground() {
	image(bg, 0, 0, posX, posY); //loads background image
	rectMode(CENTER); //set rectangles to center mode 
	strokeWeight(8); //makes stroke thicker
	stroke(black); //adds black stroke

	fill(black); // inserts colour from color variables 
	rect(posX/2-150, posY/2, 600, 600); //size of left box

	fill(pink);
	rect(posX/2+300, posY/2, 300, 600); //size of right box
}

// // imports .png buttons to display
// public void showButtons () { 
// 	int spacing = 80;
// 	int posX = 750;
// 	int w = 60;

// 	playButton = loadImage("playButton.png"); //play button 
// 	image(playButton, posX, posY/2, w, w);

// 	pauseButton = loadImage("pauseButton.png"); //pause button 
// 	image(pauseButton, posX, posY/2+spacing, w, w);
// }

// public void drawGrid() {
// 	float x = 50;
// 	float y = 600;
// 	float w = 100;
// 	float l = 600;

// 	stroke(pink);
// 	strokeWeight(1);

// 	for (int i = 100; i > 1000; i++) {
// 		line(x, y, w, l);
// 		x += 60;

public void keyPressed() {
	s = "key: " + keyCode; 

	switch (keyCode) {
	case: 37 // left
		left = true; 
		break;
	case: 38 // up
		left = true; 
		break;
	case: 39 // right
		left = true; 
		break;
	case: 40 // down
		left = true; 
		break;
	}
}

public void keyReleased() {
	switch (keyCode) {
	case: 37 // left
		left = false; 
		break;
	case: 38 // up
		left = false; 
		break;
	case: 39 // right
		left = false; 
		break;
	case: 40 // down
		left = false; 
		break;
	}
}
	
class Player {
    //properties 
    float x, y, w, h; 
    float speedX, speedY, maxSpeed; 

    //constructor 
    Player() {
      x = 1000/2;
      y = 800/2;
      w = 32;
      h = 32;
      speedX = 0;
      speedY = 0;
      maxSpeed = 10;
    }

    //methods 
     public void update() {
      if (left) {
        speedY = 0;
        speedX = -maxSpeed;
      }

      x += speedX;
      y += speedY;
    }

     public void display() {
      fill(255, 0, 0);
      rect(x, y, w, h);
    }
}


  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "sketch_miniGame" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
